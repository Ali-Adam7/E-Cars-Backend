name: CI/CD Pipeline
on:
  push:
    branches:
      - main # Trigger the pipeline on push to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Install envsubst
      - name: Install envsubst
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base  # Installs envsubst

      # Step 3: Set up Node.js for the backend build (Optional)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Step 4: Build Docker image
      - name: Build Docker Image
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/ecars:v1 .

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ecars:v1

      # Step 7 : Create .env file
      - name: Create .env file
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      # Step 8: Create .pem key for ssh
      - name: Save the private key to a .pem file
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 --decode > ./ec2_private_key.pem
          chmod 600 ./ec2_private_key.pem

      # Step 9: Use SCP to copy files to EC2
      - name: Copy Docker Compose and .env to EC2 Instance
        run: scp -i ./ec2_private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker-compose.yaml .env ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/ecars

      # Step 10: SSH into EC2 and deploy using Docker Compose
      - name: Deploy to EC2 Instance using Docker Compose
        run: |
          ssh -i ./ec2_private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            cd ecars
            docker-compose down
            docker rm ${{ secrets.DOCKER_USERNAME }}/ecars:v1 || true
            docker-compose pull
            docker-compose up -d
          EOF
